{
    "openapi": "3.0.0",
    "info": {
        "title": "Febrafar - Planner",
        "description": "Febrafar planner",
        "version": "1.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle a login request to the application",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Token type (Bearer)",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle a logout request to the application",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "User successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle a registration request to the application",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Token type (Bearer)",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/tasks/matches": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Find all tasks that match certain criteria",
                "operationId": "0d118205fba2323f134181802c24e4cd",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title to match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status to match",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "completed",
                                "in_progress"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching tasks successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve the list of tasks",
                "operationId": "df5acf0421229afb5de9a188daa35471",
                "responses": {
                    "200": {
                        "description": "List of all tasks successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "9334fbf1876a35605faa8fe8f5aac896",
                "requestBody": {
                    "description": "Task creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the new task",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the new task",
                                        "type": "string"
                                    },
                                    "deadline": {
                                        "description": "Deadline of the new task",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "start_date": {
                                        "description": "Start date of the new task",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "status": {
                                        "description": "Status of the new task",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed",
                                            "in_progress"
                                        ]
                                    },
                                    "task_type_id": {
                                        "description": "ID of the task type for the new task",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve a single task",
                "operationId": "88df9eee8686b4d2f72e0b1243c99f4d",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update an existing task",
                "operationId": "f89899b0cb719dbbbfbe2ed6cf0239de",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated task data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Updated title of the task",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Updated description of the task",
                                        "type": "string"
                                    },
                                    "deadline": {
                                        "description": "Updated deadline of the task",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "start_date": {
                                        "description": "Updated start date of the task",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "status": {
                                        "description": "Updated status of the task",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed",
                                            "in_progress"
                                        ]
                                    },
                                    "task_type_id": {
                                        "description": "Updated ID of the task type for the task",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete an existing task",
                "operationId": "06c2d1c987e5949d7b1aaa42e4be391d",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/task-types/matches": {
            "get": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Find all task types that match certain criteria",
                "operationId": "1bdf8c397dfac9b4559e23126cfa9e03",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name to match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status to match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching task types successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/task-types": {
            "get": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Retrieve the list of task types",
                "operationId": "c0f6a658288861095bc9bf46b3790a42",
                "responses": {
                    "200": {
                        "description": "List of all task types successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Create a new task type",
                "operationId": "ac5bd38d7271502c0b02c6da374d6d81",
                "requestBody": {
                    "description": "Task type creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the new task type",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of the new task type",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task type successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/task-types/{type}": {
            "get": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Retrieve a single task type",
                "operationId": "838e18c3d9fa6cccfc3ef8e225253dac",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "ID of the task type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task type successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task type not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Update an existing task type",
                "operationId": "9de535bdd237629588f98db7532afba2",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "ID of the task type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated task type data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the task type",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the task type",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task type successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task type not found"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task Types"
                ],
                "summary": "Delete an existing task type",
                "operationId": "b33db54c3213b3eb497f2cbdb6cb6d56",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "ID of the task type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task type successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task type not found"
                    }
                }
            }
        },
        "/api/users/matches": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find all users who match specific criteria",
                "operationId": "de1376c8128aa20cd61a6516150008d1",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name to be founded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve the list of users",
                "operationId": "271a9018597bbdb4204e778b4f2db136",
                "responses": {
                    "200": {
                        "description": "List of all users successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "a794d2c5818707a660863ff972b607ac",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "New user name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "New user email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New user password",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "New user role",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Recover a single user",
                "operationId": "64c59785aec5f2658a4a2b5a560cb070",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User recovered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "operationId": "f1f65c5e73cb0b10fdd850447b672c28",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "New username",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "New user email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New user password",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "New user role",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado"
                    },
                    "404": {
                        "description": "Usuário não encontrado"
                    },
                    "422": {
                        "description": "Dados de entrada inválidos"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete an existing user",
                "operationId": "e61da8b22508c63df70e810437466d03",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "properties": {
                    "id": {
                        "description": "Task ID",
                        "type": "string"
                    },
                    "title": {
                        "description": "Task title",
                        "type": "string"
                    },
                    "description": {
                        "description": "Task description",
                        "type": "string"
                    },
                    "deadline": {
                        "description": "Task deadline",
                        "type": "string",
                        "format": "date"
                    },
                    "start_date": {
                        "description": "Task start date",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Task status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "in_progress"
                        ]
                    },
                    "task_type_id": {
                        "description": "Task Type ID",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "TaskType": {
                "properties": {
                    "id": {
                        "description": "Task Type ID",
                        "type": "string"
                    },
                    "name": {
                        "description": "Task Type name",
                        "type": "string"
                    },
                    "status": {
                        "description": "Task Type status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "user id",
                        "type": "string"
                    },
                    "name": {
                        "description": "user name",
                        "type": "string"
                    },
                    "email": {
                        "description": "user email",
                        "type": "string"
                    },
                    "password": {
                        "description": "user password",
                        "type": "string"
                    },
                    "role": {
                        "description": "user role",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "APIs related to user authentication"
        },
        {
            "name": "Tasks",
            "description": "APIs related to task management"
        }
    ]
}